from aiogram import Router, types, F
from aiogram.filters import Command
from keyboards.admin import admin_panel_keyboard
from services.auth import verify_admin_password
from services.stats import get_user_stats
from services.pdf_export import export_stats_to_pdf
from handlers.start import start as start_handler

router = Router()
admin_sessions = {}

@router.message(Command("admin"))
async def admin_start(message: types.Message):
    user_id = message.from_user.id
    print(f"/admin –≤—ã–∑–≤–∞–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    admin_sessions[user_id] = {"awaiting_password": True}
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
@router.message(F.from_user.id.in_(admin_sessions.keys()))
async def handle_admin_message(message: types.Message):
    user_id = message.from_user.id
    session = admin_sessions.get(user_id, {})

    if session.get("awaiting_password"):
        if verify_admin_password(message.text):
            session["authenticated"] = True
            session.pop("awaiting_password")
            await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=admin_panel_keyboard)
        else:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    elif session.get("authenticated"):
        if message.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
            stats = get_user_stats()
            await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n{stats}")
        elif message.text == "üìÑ –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF":
            file_path = export_stats_to_pdf()
            await message.answer_document(types.FSInputFile(file_path))
        elif message.text == "üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã":
            await message.answer("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ.")
        elif message.text == "üîô –í—ã–π—Ç–∏":
            admin_sessions.pop(message.from_user.id, None)
            await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", reply_markup=types.ReplyKeyboardRemove())
            await start_handler(message)
        else:
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.", reply_markup=admin_panel_keyboard)


